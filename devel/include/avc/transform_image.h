// Generated by gencpp from file avc/transform_image.msg
// DO NOT EDIT!


#ifndef AVC_MESSAGE_TRANSFORM_IMAGE_H
#define AVC_MESSAGE_TRANSFORM_IMAGE_H

#include <ros/service_traits.h>


#include <avc/transform_imageRequest.h>
#include <avc/transform_imageResponse.h>


namespace avc
{

struct transform_image
{

typedef transform_imageRequest Request;
typedef transform_imageResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct transform_image
} // namespace avc


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::avc::transform_image > {
  static const char* value()
  {
    return "e2a28c9f46ac03baf18b533601a3ca80";
  }

  static const char* value(const ::avc::transform_image&) { return value(); }
};

template<>
struct DataType< ::avc::transform_image > {
  static const char* value()
  {
    return "avc/transform_image";
  }

  static const char* value(const ::avc::transform_image&) { return value(); }
};


// service_traits::MD5Sum< ::avc::transform_imageRequest> should match 
// service_traits::MD5Sum< ::avc::transform_image > 
template<>
struct MD5Sum< ::avc::transform_imageRequest>
{
  static const char* value()
  {
    return MD5Sum< ::avc::transform_image >::value();
  }
  static const char* value(const ::avc::transform_imageRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::avc::transform_imageRequest> should match 
// service_traits::DataType< ::avc::transform_image > 
template<>
struct DataType< ::avc::transform_imageRequest>
{
  static const char* value()
  {
    return DataType< ::avc::transform_image >::value();
  }
  static const char* value(const ::avc::transform_imageRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::avc::transform_imageResponse> should match 
// service_traits::MD5Sum< ::avc::transform_image > 
template<>
struct MD5Sum< ::avc::transform_imageResponse>
{
  static const char* value()
  {
    return MD5Sum< ::avc::transform_image >::value();
  }
  static const char* value(const ::avc::transform_imageResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::avc::transform_imageResponse> should match 
// service_traits::DataType< ::avc::transform_image > 
template<>
struct DataType< ::avc::transform_imageResponse>
{
  static const char* value()
  {
    return DataType< ::avc::transform_image >::value();
  }
  static const char* value(const ::avc::transform_imageResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AVC_MESSAGE_TRANSFORM_IMAGE_H
